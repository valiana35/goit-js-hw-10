{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nstartBtn.addEventListener('click', onStartBtnClick);\n\nlet userSelectedDate;\n\nfunction onStartBtnClick() {\nconst intervalId = setInterval(() => {\n    const init = Date.now();\n    const userInit = userSelectedDate.getTime();\n    const diff = userInit - init;\n    if (diff > 0) {\n        const convertDiff = convertMs(diff);\n        days.textContent = addLeadingZero(convertDiff.days);\n        hours.textContent = addLeadingZero(convertDiff.hours);\n        minutes.textContent = addLeadingZero(convertDiff.minutes);\n        seconds.textContent = addLeadingZero(convertDiff.seconds);\n        startBtn.disabled = true;\n        input.disabled = true;\n    } else {\n        input.disabled = false;\n        clearInterval(intervalId);\n    }\n}, 1000);\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        if (userSelectedDate < new Date) {\n            iziToast.error({\n                message: 'Please choose a date in the future',\n                position: 'topRight',\n            });\n        }\n      console.log(selectedDates[0]);\n    },\n  };\n\n  flatpickr(input, options);\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  \n  console.log(convertMs(2000));\n  console.log(convertMs(140000));\n  console.log(convertMs(24140000));"],"names":["input","startBtn","days","hours","minutes","seconds","onStartBtnClick","userSelectedDate","intervalId","init","diff","convertDiff","convertMs","addLeadingZero","value","options","selectedDates","iziToast","flatpickr","ms"],"mappings":"2GAQA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvDJ,EAAS,iBAAiB,QAASK,CAAe,EAElD,IAAIC,EAEJ,SAASD,GAAkB,CAC3B,MAAME,EAAa,YAAY,IAAM,CACjC,MAAMC,EAAO,KAAK,MAEZC,EADWH,EAAiB,UACVE,EACxB,GAAIC,EAAO,EAAG,CACV,MAAMC,EAAcC,EAAUF,CAAI,EAClCR,EAAK,YAAcW,EAAeF,EAAY,IAAI,EAClDR,EAAM,YAAcU,EAAeF,EAAY,KAAK,EACpDP,EAAQ,YAAcS,EAAeF,EAAY,OAAO,EACxDN,EAAQ,YAAcQ,EAAeF,EAAY,OAAO,EACxDV,EAAS,SAAW,GACpBD,EAAM,SAAW,EACzB,MACQA,EAAM,SAAW,GACjB,cAAcQ,CAAU,CAEhC,EAAG,GAAI,CACP,CAEA,SAASK,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBT,EAAmBS,EAAc,GAC7BT,EAAmB,IAAI,MACvBU,EAAS,MAAM,CACX,QAAS,qCACT,SAAU,UAC1B,CAAa,EAEP,QAAQ,IAAID,EAAc,EAAE,CAC7B,CACL,EAEEE,EAAUlB,EAAOe,CAAO,EAE1B,SAASH,EAAUO,EAAI,CAKnB,MAAMjB,EAAO,KAAK,MAAMiB,EAAK,KAAG,EAC1BhB,EAAQ,KAAK,MAAOgB,EAAK,MAAO,IAAI,EACpCf,EAAU,KAAK,MAAQe,EAAK,MAAO,KAAQ,GAAM,EACjDd,EAAU,KAAK,MAASc,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAjB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,QAAQ,IAAIO,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}